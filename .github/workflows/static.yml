# 部署 player3.html 文件到 GitHub Pages 的工作流
name: 部署 player3.html 到 Pages

on:
  # 仅当推送到 master 分支时触发工作流
  push:
    branches: ["master"]

  # 允许从 GitHub Actions 页面手动触发此工作流
  workflow_dispatch:

# 设置 GITHUB_TOKEN 的权限，以允许部署到 GitHub Pages
permissions:
  contents: read     # 读取内容权限
  pages: write       # 写入 GitHub Pages 的权限
  id-token: write    # 写入 ID 令牌的权限

# 只允许一次并发部署，跳过队列中进行中的运行和最新的排队任务
# 但不要取消正在进行中的部署，确保生产部署能正常完成
concurrency:
  group: "pages"  # 并发组命名为“pages”
  cancel-in-progress: false  # 不取消进行中的部署

jobs:
  # 单个部署任务，因为我们只需要进行简单的部署
  deploy:
    environment:
      name: github-pages  # 部署环境名称
      url: ${{ steps.deployment.outputs.page_url }}  # 部署完成后输出页面的 URL
    runs-on: ubuntu-latest  # 在最新的 Ubuntu 服务器上运行
    steps:
      # 第一步：检出仓库代码
      - name: 检出代码
        uses: actions/checkout@v4
      
      # 第二步：设置 GitHub Pages 环境
      - name: 设置 Pages
        uses: actions/configure-pages@v5
      
      # 第三步：上传工件（player3.html 文件）
      - name: 上传工件
        uses: actions/upload-pages-artifact@v3
        with:
          # 指定要上传的 HTML 文件路径
          path: './player3.html'  # 指定根目录下的 player3.html 文件
      
      # 第四步：部署到 GitHub Pages
      - name: 部署到 GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
